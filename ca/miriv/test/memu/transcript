# do scripts/compile.do
# ** Warning: (vlib-34) Library already exists at "work".
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work work 
# Modifying modelsim.ini
# Model Technology ModelSim - Intel FPGA Edition vcom 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:55:56 on May 18,2021
# vcom -work work -2008 ../../vhdl/mem_pkg.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling package mem_pkg
# -- Compiling package body mem_pkg
# -- Loading package mem_pkg
# End time: 21:55:56 on May 18,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vcom 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:55:56 on May 18,2021
# vcom -work work -2008 ../../vhdl/core_pkg.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package mem_pkg
# -- Compiling package core_pkg
# -- Compiling package body core_pkg
# -- Loading package core_pkg
# End time: 21:55:57 on May 18,2021, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vcom 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:55:57 on May 18,2021
# vcom -work work -2008 ../../vhdl/op_pkg.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package mem_pkg
# -- Loading package core_pkg
# -- Compiling package op_pkg
# End time: 21:55:57 on May 18,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vcom 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:55:57 on May 18,2021
# vcom -work work -2008 ../../vhdl/memu.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package mem_pkg
# -- Loading package core_pkg
# -- Loading package op_pkg
# -- Compiling entity memu
# -- Compiling architecture rtl of memu
# End time: 21:55:57 on May 18,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vcom 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:55:57 on May 18,2021
# vcom -work work -2008 ../tb_util_pkg.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_textio
# -- Loading package mem_pkg
# -- Loading package core_pkg
# -- Loading package op_pkg
# -- Compiling package tb_util_pkg
# -- Compiling package body tb_util_pkg
# -- Loading package tb_util_pkg
# End time: 21:55:57 on May 18,2021, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vcom 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:55:57 on May 18,2021
# vcom -work work -2008 tb/memu_tb.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package NUMERIC_STD
# -- Loading package std_logic_textio
# -- Loading package mem_pkg
# -- Loading package core_pkg
# -- Loading package op_pkg
# -- Loading package tb_util_pkg
# -- Compiling entity tb
# -- Compiling architecture bench of tb
# ** Error: tb/memu_tb.vhd(98): (vcom-1600) No feasible entries for subprogram "to_string".
#    Visible subprograms are:
#       (implicit) STANDARD.to_string[BIT_VECTOR return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(79)
#       (implicit) STANDARD.to_string[BOOLEAN return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[BIT return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.CHARACTER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.SEVERITY_LEVEL return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[universal_integer return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[universal_real return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[INTEGER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.TIME return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.FILE_OPEN_KIND return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.FILE_OPEN_STATUS return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL, INTEGER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL, std.STANDARD.STRING return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.TIME, std.STANDARD.TIME return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) op_pkg.to_string[work.op_pkg.alu_op_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(20)
#       (implicit) op_pkg.to_string[work.op_pkg.memtype_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(53)
#       (implicit) op_pkg.to_string[work.op_pkg.branch_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(60)
#       (implicit) op_pkg.to_string[work.op_pkg.wbsrc_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(90)
#       (implicit) TEXTIO.to_string[std.TEXTIO.SIDE return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/textio.vhd(31)
#       (implicit) NUMERIC_STD.to_string[UNRESOLVED_UNSIGNED return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/mti_numeric_std.vhd(76)
#       (implicit) NUMERIC_STD.to_string[UNRESOLVED_SIGNED return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/mti_numeric_std.vhd(77)
#       (implicit) std_logic_1164.to_string[STD_ULOGIC return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/stdlogic.vhd(67)
#       (implicit) std_logic_1164.to_string[STD_ULOGIC_VECTOR return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/stdlogic.vhd(72)
# ** Error: tb/memu_tb.vhd(98): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(98): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): (vcom-1600) No feasible entries for subprogram "to_string".
#    Visible subprograms are:
#       (implicit) STANDARD.to_string[BIT_VECTOR return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(79)
#       (implicit) STANDARD.to_string[BOOLEAN return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[BIT return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.CHARACTER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.SEVERITY_LEVEL return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[universal_integer return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[universal_real return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[INTEGER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.TIME return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.FILE_OPEN_KIND return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.FILE_OPEN_STATUS return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL, INTEGER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL, std.STANDARD.STRING return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.TIME, std.STANDARD.TIME return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) op_pkg.to_string[work.op_pkg.alu_op_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(20)
#       (implicit) op_pkg.to_string[work.op_pkg.memtype_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(53)
#       (implicit) op_pkg.to_string[work.op_pkg.branch_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(60)
#       (implicit) op_pkg.to_string[work.op_pkg.wbsrc_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(90)
#       (implicit) TEXTIO.to_string[std.TEXTIO.SIDE return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/textio.vhd(31)
#       (implicit) NUMERIC_STD.to_string[UNRESOLVED_UNSIGNED return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/mti_numeric_std.vhd(76)
#       (implicit) NUMERIC_STD.to_string[UNRESOLVED_SIGNED return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/mti_numeric_std.vhd(77)
#       (implicit) std_logic_1164.to_string[STD_ULOGIC return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/stdlogic.vhd(67)
#       (implicit) std_logic_1164.to_string[STD_ULOGIC_VECTOR return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/stdlogic.vhd(72)
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(99): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): (vcom-1600) No feasible entries for subprogram "to_string".
#    Visible subprograms are:
#       (implicit) STANDARD.to_string[BIT_VECTOR return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(79)
#       (implicit) STANDARD.to_string[BOOLEAN return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[BIT return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.CHARACTER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.SEVERITY_LEVEL return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[universal_integer return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[universal_real return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[INTEGER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.TIME return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.FILE_OPEN_KIND return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.FILE_OPEN_STATUS return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL, INTEGER return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.REAL, std.STANDARD.STRING return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) STANDARD.to_string[std.STANDARD.TIME, std.STANDARD.TIME return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/standard.vhd(93)
#       (implicit) op_pkg.to_string[work.op_pkg.alu_op_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(20)
#       (implicit) op_pkg.to_string[work.op_pkg.memtype_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(53)
#       (implicit) op_pkg.to_string[work.op_pkg.branch_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(60)
#       (implicit) op_pkg.to_string[work.op_pkg.wbsrc_type return std.STANDARD.STRING] at ../../vhdl/op_pkg.vhd(90)
#       (implicit) TEXTIO.to_string[std.TEXTIO.SIDE return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/std/textio.vhd(31)
#       (implicit) NUMERIC_STD.to_string[UNRESOLVED_UNSIGNED return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/mti_numeric_std.vhd(76)
#       (implicit) NUMERIC_STD.to_string[UNRESOLVED_SIGNED return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/mti_numeric_std.vhd(77)
#       (implicit) std_logic_1164.to_string[STD_ULOGIC return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/stdlogic.vhd(67)
#       (implicit) std_logic_1164.to_string[STD_ULOGIC_VECTOR return std.STANDARD.STRING] at $MODEL_TECH/../vhdl_src/ieee/stdlogic.vhd(72)
# ** Error: tb/memu_tb.vhd(100): ** Error: (vcom-1590) Bad expression in left operand of infix expression '&'.
# ** Error: tb/memu_tb.vhd(100): Type error resolving infix expression "&" as type std.STANDARD.STRING.
# -- Loading entity memu
# ** Error: tb/memu_tb.vhd(191): VHDL Compiler exiting
# End time: 21:55:57 on May 18,2021, Elapsed time: 0:00:00
# Errors: 28, Warnings: 0
# ** Error: /opt/intelFPGA_lite/18.1/modelsim_ase/linuxaloem/vcom failed.
# Error in macro ./scripts/compile.do line 13
# /opt/intelFPGA_lite/18.1/modelsim_ase/linuxaloem/vcom failed.
#     while executing
# "vcom -work work -2008 tb/memu_tb.vhd | tee -a log"
# quit -f
